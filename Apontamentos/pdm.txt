

************************************************************************
* 24.09.2015
************************************************************************

Inversion Of Control... o demónio!
É a perca de controle quando se usam ambientes gráficos!

Ter em consideração que o JRE deverá ser o 6....

Processo de construção de um projeto android é compricada
* 1 - um compilador JAVA (javac)... pega em *.java e transforma em *.jar
* 2 - Resrouces, coisas relevantes, mas que não são código
* mitura tudo, e cria um *.apk e ainda o manifesto. Por exemplo, no manifesto, diz-se quais os requistos no dispositivo alvo... entre outras coisas

Activitiy:
é apresentar coisas e recolher input dos utilizadores.
A diferença fundamental é... não existe main( ... )

Então como é que isto arranca?
onCreate(...) é chamado para constituir a user interface que está a ser pedida

Normas/Regras
1. Regra: Método de setup/preparação, logo a primeira coisa a fazer é chamar 	o método da base

2. Regra: métodos de teardown/destruição: chama-se o metodo da base no final!


-> Controlos gráficos são objectos que se representam visualmente
	- Simples
	- Compostos
		- layout é um controlo cujo proposito é conter outros e tratar do seu ajuste (dos simples)

************************************************************************
* 29.09.2015
************************************************************************

IOC - (inversion of Control) Consequencias
	- Modelo de eventos - Introdução
	- Activity lifecicle


Consquências do IOC:
~~~~~~~~~~~~~~~~~~~~




Nota: para multilingua sem grandes stresses: usar os resourses.
Existe um ficheiro "strings.xml" para ser usado por omissão
Ter cuidado com os nomes dados (Um package em JAVA serve para isolar espçao de nomes. PAra evitar colisões...).
Como começa a crescer, existe a grande probabilidade de existirem colisões. Para evitar essas coisas, temos que arranjar uma convenção.

A user interface é composto por 3 coisas:
				Relative Layout
				/			\
			   /			 \
		Text View			Button

Os controlos gráficos são objectos... nós só temos que manipular o seu estado. É a consequencia da sua manipulação, é o controlo ser pintado de novo, mas não é nossa responsabilidade.


Para se registar os eventos e iniciar os elementos, temos duas formas:
1. redefinir
2. criar

Nota: neste modelo de eventos apenas temos um listener, enquanto que no AWT (Java) e outros dá para adicionar mais do que um... PORQUÊ?


Desafio!
Activities101
qual a dinâmica dos callbacks?
. uma activity
com um texto
hasCode: textBox para receber o valor
dois botões: other main
criar uma outra activity, semelhante, mas adicionando um back (opcional)








